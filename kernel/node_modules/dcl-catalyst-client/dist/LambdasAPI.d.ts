import { RequestOptions } from 'dcl-catalyst-commons';
export declare type ServerMetadata = {
    baseUrl: string;
    owner: string;
    id: string;
};
export interface LambdasAPI {
    fetchProfiles(ethAddresses: string[], profileOptions?: ProfileOptions, options?: RequestOptions): Promise<any[]>;
    fetchWearables(filters: WearablesFilters, options?: RequestOptions): Promise<any[]>;
    fetchOwnedWearables<B extends boolean>(ethAddress: string, includeDefinitions: B, options?: RequestOptions): Promise<OwnedItems<B>>;
    fetchOwnedThirdPartyWearables<B extends boolean>(ethAddress: string, thirdPartyId: string, includeDefinitions: B, options?: RequestOptions): Promise<OwnedItems<B>>;
    fetchEmotes(filters: EmotesFilters, options?: RequestOptions): Promise<any[]>;
    fetchOwnedEmotes<B extends boolean>(ethAddress: string, includeDefinitions: B, options?: RequestOptions): Promise<OwnedItems<B>>;
    fetchOwnedThirdPartyEmotes<B extends boolean>(ethAddress: string, thirdPartyId: string, includeDefinitions: B, options?: RequestOptions): Promise<OwnedItems<B>>;
    fetchCatalystsApprovedByDAO(options?: RequestOptions): Promise<ServerMetadata[]>;
    fetchLambdasStatus(options?: RequestOptions): Promise<{
        contentServerUrl: string;
    }>;
    getLambdasUrl(): string;
}
export declare type ProfileOptions = {
    versions?: number[];
    fields?: ProfileFields;
};
export declare class ProfileFields {
    private readonly fields;
    static readonly ONLY_SNAPSHOTS: ProfileFields;
    private constructor();
    getFields(): string;
}
export declare type ItemFilters = {
    collectionIds?: string[];
    textSearch?: string;
};
export declare type WearablesFilters = ItemFilters & {
    wearableIds?: string[];
};
export declare type EmotesFilters = ItemFilters & {
    emoteIds?: string[];
};
export declare type OwnedItems<B extends boolean> = (B extends false ? OwnedItemsWithoutDefinition : OwnedItemsWithDefinition)[];
export declare type OwnedItemsWithDefinition = OwnedItemsWithoutDefinition & {
    definition: any;
};
export declare type OwnedItemsWithoutDefinition = {
    urn: string;
    amount: number;
};
