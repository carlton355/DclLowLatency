import { MatrixClient } from 'matrix-js-sdk/lib/client';
import { MatrixEvent } from 'matrix-js-sdk/lib/models/event';
import { Room } from 'matrix-js-sdk/lib/models/room';
import { EthAddress, AuthChain } from '@dcl/crypto';
import { ConversationType, MessageStatus, TextMessage, SocialId, BasicMessageInfo, Timestamp } from './types';
import { ICreateClientOpts } from 'matrix-js-sdk';
export declare function login(synapseUrl: string, ethAddress: EthAddress, timestamp: Timestamp, authChain: AuthChain, getLocalStorage?: () => Storage, createOpts?: Partial<ICreateClientOpts>): Promise<MatrixClient>;
export declare function findEventInRoom(client: MatrixClient, roomId: string, eventId: string): MatrixEvent | undefined;
export declare function buildTextMessage(event: MatrixEvent, status: MessageStatus): TextMessage;
export declare function getConversationTypeFromRoom(client: MatrixClient, room: Room): ConversationType;
export declare function waitForNextSync(client: MatrixClient): Promise<void>;
export declare function getOnlyMessagesTimelineSetFromRoom(userId: SocialId, room: Room, limit?: number): import("matrix-js-sdk").EventTimelineSet;
export declare function getOnlyMessagesSentByMeTimelineSetFromRoom(client: any, room: any): any;
export declare function matrixEventToBasicEventInfo(event: MatrixEvent): BasicMessageInfo;
export declare function getLastFriendshipEventInRoom(room: Room, key?: string): MatrixEvent | null;
