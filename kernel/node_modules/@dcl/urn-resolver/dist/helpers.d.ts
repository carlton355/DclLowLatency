export declare type Collection = {
    collectionId: string;
    contractAddress: string;
};
export declare function getCollection(addressOrName: string): Promise<Collection | null>;
export declare function getContract(network: string, contractNameOrAddress: string): Promise<string | null>;
export declare function isValidProtocol(protocol: string): boolean;
export declare type ParserFunction = (original: URL, captures: RegExpExecArray) => Promise<{
    url: URL;
} | undefined>;
/** @public */
export declare type RouteMap<T> = {
    [P in string]: (original: URL, captures: Record<string, string>) => Promise<T | null | void>;
};
/**
 * @public
 */
export declare function createParser<T>(handlers: RouteMap<T>): (urn: string) => Promise<T | null>;
//# sourceMappingURL=helpers.d.ts.map