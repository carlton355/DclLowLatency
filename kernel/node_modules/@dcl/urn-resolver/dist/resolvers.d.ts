import { RouteMap } from "./helpers";
import { BlockchainAsset, OffChainAsset, BlockchainCollectionV1Asset, BlockchainCollectionV2Asset, BlockchainLandAsset, DecentralandAssetIdentifier, BlockchainCollectionV1, BlockchainCollectionV2, BlockchainCollectionThirdParty, BlockchainCollectionThirdPartyCollection, BlockchainCollectionThirdPartyName, EntityV3Asset } from "./types";
/**
 * Ordered map of resolvers.
 * @public
 */
export declare const resolvers: RouteMap<DecentralandAssetIdentifier>;
export declare const internalResolver: (urn: string) => Promise<DecentralandAssetIdentifier | null>;
export declare function resolveLandAsset(uri: URL, groups: Record<"protocol" | "position", string>): Promise<BlockchainLandAsset | void>;
export declare function resolveLegacyDclUrl(uri: URL): Promise<BlockchainAsset | BlockchainCollectionV1Asset | BlockchainCollectionV1 | BlockchainCollectionV2Asset | BlockchainCollectionV2 | BlockchainCollectionThirdParty | BlockchainCollectionThirdPartyCollection | BlockchainCollectionThirdPartyName | OffChainAsset | EntityV3Asset | null | undefined>;
export declare function resolveEthereumAsset(uri: URL, groups: Record<"protocol" | "contract" | "tokenId", string>): Promise<BlockchainAsset | void>;
export declare function resolveOffchainAsset(uri: URL, groups: Record<"name" | "registry", string>): Promise<OffChainAsset | void>;
export declare function resolveEntityV3(uri: URL, groups: Record<"cid", string>): Promise<EntityV3Asset | void>;
export declare function resolveCollectionV1AssetByCollectionName(uri: URL, groups: Record<"protocol" | "collectionName" | "name", string>): Promise<BlockchainCollectionV1Asset | void>;
export declare function resolveCollectionV1Asset(uri: URL, groups: Record<"protocol" | "contract" | "name", string>): Promise<BlockchainCollectionV1Asset | void>;
export declare function resolveCollectionV2Asset(uri: URL, groups: Record<"protocol" | "contract" | "id", string>): Promise<BlockchainCollectionV2Asset | void>;
export declare function resolveCollectionV1(uri: URL, groups: Record<"protocol" | "contract", string>): Promise<BlockchainCollectionV1 | void>;
export declare function resolveCollectionV1ByCollectionName(uri: URL, groups: Record<"protocol" | "collectionName", string>): Promise<BlockchainCollectionV1 | void>;
export declare function resolveCollectionV2(uri: URL, groups: Record<"protocol" | "contract", string>): Promise<BlockchainCollectionV2 | void>;
export declare function resolveThirdPartyCollection(uri: URL, groups: Record<"protocol" | "thirdPartyName" | "collectionId" | "itemId", string>): Promise<BlockchainCollectionThirdParty | void>;
export declare function resolveThirdPartyCollectionName(uri: URL, groups: Record<"protocol" | "thirdPartyName", string>): Promise<BlockchainCollectionThirdPartyName | void>;
export declare function resolveThirdPartyCollectionOnlyCollection(uri: URL, groups: Record<"protocol" | "thirdPartyName" | "collectionId", string>): Promise<BlockchainCollectionThirdPartyCollection | void>;
//# sourceMappingURL=resolvers.d.ts.map