/**
 * Feature flags options
 * @public
 */
export declare type FeatureFlagOptions = {
    /** Application namespace */
    applicationName: string;
    /** Identify the user */
    userId?: string;
    /** Receive all feature flags, even the ones turned off */
    debug?: boolean;
    /** Overrides the default FeatureFlags endpoint */
    featureFlagsUrl?: string;
};
/**
 * Feature flags variants.
 * variants are set to enable experiments or rollouts
 * more info: https://docs.getunleash.io/advanced/toggle_variants
 * @public
 */
export declare type FeatureFlagVariant = {
    name: string;
    enabled: boolean;
    payload?: {
        type: string;
        value: string;
    };
};
/**
 * Feature flags result
 * @public
 */
export declare type FeatureFlagsResult = {
    flags: Record<string, boolean>;
    variants: Record<string, FeatureFlagVariant>;
    error?: Error;
};
/**
 * Fetches a feature flags object from the server
 * @public
 */
export declare function fetchFlags(options: FeatureFlagOptions): Promise<FeatureFlagsResult>;
/**
 * Trasform a FeatureFlagsResult object into a list of string
 * according with the standard defined on the [ADR-73](https://github.com/decentraland/adr/blob/main/docs/ADR-73-ab-testing.md#segment-measuring-your-new-ab-testing)
 * @param ff - Feature flag object
 * @public
 */
export declare function toFeatureList(ff?: Partial<FeatureFlagsResult>): string[];
//# sourceMappingURL=index.d.ts.map