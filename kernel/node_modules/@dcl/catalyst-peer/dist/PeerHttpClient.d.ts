interface PeerRequestInit extends RequestInit {
    bodyObject?: object;
}
export declare class ResponseError extends Error {
    request: RequestInfo;
    response: Response;
    init?: RequestInit | undefined;
    responseJson?: any;
    constructor(request: RequestInfo, response: Response, init?: RequestInit | undefined, responseJson?: any, message?: string);
}
export declare class PeerHttpClient {
    lighthouseUrl: string;
    private tokenProvider;
    constructor(lighthouseUrl: string, tokenProvider: () => string);
    fetch(urlOrPath: string, init?: PeerRequestInit): Promise<{
        response: Response;
        json: any;
    }>;
}
export declare function fetchOrThrow(input: RequestInfo, init?: RequestInit): Promise<Response>;
export {};
