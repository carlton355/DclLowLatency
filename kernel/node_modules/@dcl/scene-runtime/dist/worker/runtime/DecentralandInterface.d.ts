/// <reference types="@dcl/posix" />
import { RpcClientPort } from '@dcl/rpc/dist/types';
import { RuntimeEventCallback } from './Events';
import { EngineApiServiceDefinition, EntityAction } from '@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen';
import { SceneRuntimeEventState } from './Events';
import { RpcClientModule } from '@dcl/rpc/dist/codegen';
export interface DecentralandInterfaceOptions {
    onLog: (...args: any[]) => void;
    onError: (e: Error) => void;
    onEventFunctions: RuntimeEventCallback[];
    sceneId: string;
    clientPort: RpcClientPort;
    eventState: SceneRuntimeEventState;
    batchEvents: {
        events: EntityAction[];
    };
    onStartFunctions: (() => void)[];
    onUpdateFunctions: ((dt: number) => void)[];
    EngineApi: RpcClientModule<EngineApiServiceDefinition>;
}
export declare function createDecentralandInterface(options: DecentralandInterfaceOptions): DecentralandInterface;
