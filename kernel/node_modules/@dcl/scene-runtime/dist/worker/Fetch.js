"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createFetch = void 0;
const p_queue_1 = __importDefault(require("p-queue"));
const TIMEOUT_LIMIT = 29000;
function createFetch({ canUseFetch, previewMode, log, originalFetch }) {
    const fifoFetch = new p_queue_1.default({ concurrency: 1 });
    return async (resource, init) => {
        const url = resource instanceof Request ? resource.url : resource;
        if (url.toLowerCase().substr(0, 8) !== "https://") {
            if (previewMode) {
                log("⚠️ Warning: Can't make an unsafe http request in deployed scenes, please consider upgrading to https. url=" +
                    url);
            }
            else {
                return Promise.reject(new Error("Can't make an unsafe http request, please upgrade to https. url=" + url));
            }
        }
        if (!canUseFetch) {
            return Promise.reject(new Error("This scene is not allowed to use fetch."));
        }
        async function fetchRequest() {
            const abortController = new AbortController();
            const timeout = setTimeout(() => {
                ;
                abortController.abort();
            }, Math.max(init?.timeout || TIMEOUT_LIMIT, 1));
            try {
                // DO NOT remove the "await" from the next line
                return await originalFetch(resource, { signal: abortController.signal, ...init });
            }
            finally {
                clearTimeout(timeout);
            }
        }
        return fifoFetch.add(fetchRequest);
    };
}
exports.createFetch = createFetch;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmV0Y2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvd29ya2VyL0ZldGNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNEQUE0QjtBQUU1QixNQUFNLGFBQWEsR0FBRyxLQUFLLENBQUE7QUFjM0IsU0FBZ0IsV0FBVyxDQUFDLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxHQUFHLEVBQUUsYUFBYSxFQUFnQjtJQUN4RixNQUFNLFNBQVMsR0FBRyxJQUFJLGlCQUFNLENBQUMsRUFBRSxXQUFXLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQTtJQUNoRCxPQUFPLEtBQUssRUFBRSxRQUFxQixFQUFFLElBQWdELEVBQXFCLEVBQUU7UUFDMUcsTUFBTSxHQUFHLEdBQUcsUUFBUSxZQUFZLE9BQU8sQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFBO1FBQ2pFLElBQUksR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssVUFBVSxFQUFFO1lBQ2pELElBQUksV0FBVyxFQUFFO2dCQUNmLEdBQUcsQ0FDRCw0R0FBNEc7b0JBQzFHLEdBQUcsQ0FDTixDQUFBO2FBQ0Y7aUJBQU07Z0JBQ0wsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyxDQUFDLGtFQUFrRSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUE7YUFDM0c7U0FDRjtRQUVELElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDaEIsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyxDQUFDLHlDQUF5QyxDQUFDLENBQUMsQ0FBQTtTQUM1RTtRQUVELEtBQUssVUFBVSxZQUFZO1lBQ3pCLE1BQU0sZUFBZSxHQUFHLElBQUksZUFBZSxFQUFFLENBQUE7WUFDN0MsTUFBTSxPQUFPLEdBQUcsVUFBVSxDQUFDLEdBQUcsRUFBRTtnQkFDOUIsQ0FBQztnQkFBQyxlQUF1QixDQUFDLEtBQUssRUFBRSxDQUFBO1lBQ25DLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxPQUFPLElBQUksYUFBYSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUE7WUFDL0MsSUFBSTtnQkFDRiwrQ0FBK0M7Z0JBQy9DLE9BQU8sTUFBTSxhQUFhLENBQUMsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLGVBQWUsQ0FBQyxNQUFNLEVBQUUsR0FBRyxJQUFJLEVBQUUsQ0FBQyxDQUFBO2FBQ2xGO29CQUFTO2dCQUNSLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQTthQUN0QjtRQUNILENBQUM7UUFFRCxPQUFPLFNBQVMsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUE7SUFDcEMsQ0FBQyxDQUFBO0FBQ0gsQ0FBQztBQWxDRCxrQ0FrQ0MifQ==