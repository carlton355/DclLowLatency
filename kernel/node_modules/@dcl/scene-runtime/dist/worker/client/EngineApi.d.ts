import { RpcClientPort } from '@dcl/rpc/dist/types';
export declare function createEngineApiServiceClient<Context extends {}>(clientPort: RpcClientPort): import("@dcl/rpc/dist/codegen-types").RawClient<import("@dcl/rpc/dist/codegen-types").FromTsProtoServiceDefinition<{
    readonly name: "EngineApiService";
    readonly fullName: "decentraland.kernel.apis.EngineApiService";
    readonly methods: {
        readonly sendBatch: {
            readonly name: "SendBatch";
            readonly requestType: {
                encode(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ManyEntityAction, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ManyEntityAction;
                fromJSON(object: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ManyEntityAction;
                toJSON(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ManyEntityAction): unknown;
                fromPartial<I extends {
                    actions?: {
                        type?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EAType | undefined;
                        tag?: string | undefined;
                        payload?: {
                            openExternalUrl?: {
                                url?: string | undefined;
                            } | undefined;
                            openNftDialog?: {
                                assetContractAddress?: string | undefined;
                                tokenId?: string | undefined;
                                comment?: string | undefined;
                            } | undefined;
                            createEntity?: {
                                id?: string | undefined;
                            } | undefined;
                            removeEntity?: {
                                id?: string | undefined;
                            } | undefined;
                            updateEntityComponent?: {
                                entityId?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                                json?: string | undefined;
                            } | undefined;
                            attachEntityComponent?: {
                                entityId?: string | undefined;
                                name?: string | undefined;
                                id?: string | undefined;
                            } | undefined;
                            componentRemoved?: {
                                entityId?: string | undefined;
                                name?: string | undefined;
                            } | undefined;
                            setEntityParent?: {
                                entityId?: string | undefined;
                                parentId?: string | undefined;
                            } | undefined;
                            query?: {
                                queryId?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").QueryType | undefined;
                                payload?: string | undefined;
                            } | undefined;
                            componentCreated?: {
                                id?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                            } | undefined;
                            componentDisposed?: {
                                id?: string | undefined;
                            } | undefined;
                            componentUpdated?: {
                                id?: string | undefined;
                                json?: string | undefined;
                            } | undefined;
                            initMessagesFinished?: {} | undefined;
                        } | undefined;
                    }[] | undefined;
                } & {
                    actions?: ({
                        type?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EAType | undefined;
                        tag?: string | undefined;
                        payload?: {
                            openExternalUrl?: {
                                url?: string | undefined;
                            } | undefined;
                            openNftDialog?: {
                                assetContractAddress?: string | undefined;
                                tokenId?: string | undefined;
                                comment?: string | undefined;
                            } | undefined;
                            createEntity?: {
                                id?: string | undefined;
                            } | undefined;
                            removeEntity?: {
                                id?: string | undefined;
                            } | undefined;
                            updateEntityComponent?: {
                                entityId?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                                json?: string | undefined;
                            } | undefined;
                            attachEntityComponent?: {
                                entityId?: string | undefined;
                                name?: string | undefined;
                                id?: string | undefined;
                            } | undefined;
                            componentRemoved?: {
                                entityId?: string | undefined;
                                name?: string | undefined;
                            } | undefined;
                            setEntityParent?: {
                                entityId?: string | undefined;
                                parentId?: string | undefined;
                            } | undefined;
                            query?: {
                                queryId?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").QueryType | undefined;
                                payload?: string | undefined;
                            } | undefined;
                            componentCreated?: {
                                id?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                            } | undefined;
                            componentDisposed?: {
                                id?: string | undefined;
                            } | undefined;
                            componentUpdated?: {
                                id?: string | undefined;
                                json?: string | undefined;
                            } | undefined;
                            initMessagesFinished?: {} | undefined;
                        } | undefined;
                    }[] & ({
                        type?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EAType | undefined;
                        tag?: string | undefined;
                        payload?: {
                            openExternalUrl?: {
                                url?: string | undefined;
                            } | undefined;
                            openNftDialog?: {
                                assetContractAddress?: string | undefined;
                                tokenId?: string | undefined;
                                comment?: string | undefined;
                            } | undefined;
                            createEntity?: {
                                id?: string | undefined;
                            } | undefined;
                            removeEntity?: {
                                id?: string | undefined;
                            } | undefined;
                            updateEntityComponent?: {
                                entityId?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                                json?: string | undefined;
                            } | undefined;
                            attachEntityComponent?: {
                                entityId?: string | undefined;
                                name?: string | undefined;
                                id?: string | undefined;
                            } | undefined;
                            componentRemoved?: {
                                entityId?: string | undefined;
                                name?: string | undefined;
                            } | undefined;
                            setEntityParent?: {
                                entityId?: string | undefined;
                                parentId?: string | undefined;
                            } | undefined;
                            query?: {
                                queryId?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").QueryType | undefined;
                                payload?: string | undefined;
                            } | undefined;
                            componentCreated?: {
                                id?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                            } | undefined;
                            componentDisposed?: {
                                id?: string | undefined;
                            } | undefined;
                            componentUpdated?: {
                                id?: string | undefined;
                                json?: string | undefined;
                            } | undefined;
                            initMessagesFinished?: {} | undefined;
                        } | undefined;
                    } & {
                        type?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EAType | undefined;
                        tag?: string | undefined;
                        payload?: ({
                            openExternalUrl?: {
                                url?: string | undefined;
                            } | undefined;
                            openNftDialog?: {
                                assetContractAddress?: string | undefined;
                                tokenId?: string | undefined;
                                comment?: string | undefined;
                            } | undefined;
                            createEntity?: {
                                id?: string | undefined;
                            } | undefined;
                            removeEntity?: {
                                id?: string | undefined;
                            } | undefined;
                            updateEntityComponent?: {
                                entityId?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                                json?: string | undefined;
                            } | undefined;
                            attachEntityComponent?: {
                                entityId?: string | undefined;
                                name?: string | undefined;
                                id?: string | undefined;
                            } | undefined;
                            componentRemoved?: {
                                entityId?: string | undefined;
                                name?: string | undefined;
                            } | undefined;
                            setEntityParent?: {
                                entityId?: string | undefined;
                                parentId?: string | undefined;
                            } | undefined;
                            query?: {
                                queryId?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").QueryType | undefined;
                                payload?: string | undefined;
                            } | undefined;
                            componentCreated?: {
                                id?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                            } | undefined;
                            componentDisposed?: {
                                id?: string | undefined;
                            } | undefined;
                            componentUpdated?: {
                                id?: string | undefined;
                                json?: string | undefined;
                            } | undefined;
                            initMessagesFinished?: {} | undefined;
                        } & {
                            openExternalUrl?: ({
                                url?: string | undefined;
                            } & {
                                url?: string | undefined;
                            } & { [K in Exclude<keyof I["actions"][number]["payload"]["openExternalUrl"], "url">]: never; }) | undefined;
                            openNftDialog?: ({
                                assetContractAddress?: string | undefined;
                                tokenId?: string | undefined;
                                comment?: string | undefined;
                            } & {
                                assetContractAddress?: string | undefined;
                                tokenId?: string | undefined;
                                comment?: string | undefined;
                            } & { [K_1 in Exclude<keyof I["actions"][number]["payload"]["openNftDialog"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").OpenNFTDialogBody>]: never; }) | undefined;
                            createEntity?: ({
                                id?: string | undefined;
                            } & {
                                id?: string | undefined;
                            } & { [K_2 in Exclude<keyof I["actions"][number]["payload"]["createEntity"], "id">]: never; }) | undefined;
                            removeEntity?: ({
                                id?: string | undefined;
                            } & {
                                id?: string | undefined;
                            } & { [K_3 in Exclude<keyof I["actions"][number]["payload"]["removeEntity"], "id">]: never; }) | undefined;
                            updateEntityComponent?: ({
                                entityId?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                                json?: string | undefined;
                            } & {
                                entityId?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                                json?: string | undefined;
                            } & { [K_4 in Exclude<keyof I["actions"][number]["payload"]["updateEntityComponent"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UpdateEntityComponentBody>]: never; }) | undefined;
                            attachEntityComponent?: ({
                                entityId?: string | undefined;
                                name?: string | undefined;
                                id?: string | undefined;
                            } & {
                                entityId?: string | undefined;
                                name?: string | undefined;
                                id?: string | undefined;
                            } & { [K_5 in Exclude<keyof I["actions"][number]["payload"]["attachEntityComponent"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").AttachEntityComponentBody>]: never; }) | undefined;
                            componentRemoved?: ({
                                entityId?: string | undefined;
                                name?: string | undefined;
                            } & {
                                entityId?: string | undefined;
                                name?: string | undefined;
                            } & { [K_6 in Exclude<keyof I["actions"][number]["payload"]["componentRemoved"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ComponentRemovedBody>]: never; }) | undefined;
                            setEntityParent?: ({
                                entityId?: string | undefined;
                                parentId?: string | undefined;
                            } & {
                                entityId?: string | undefined;
                                parentId?: string | undefined;
                            } & { [K_7 in Exclude<keyof I["actions"][number]["payload"]["setEntityParent"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SetEntityParentBody>]: never; }) | undefined;
                            query?: ({
                                queryId?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").QueryType | undefined;
                                payload?: string | undefined;
                            } & {
                                queryId?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").QueryType | undefined;
                                payload?: string | undefined;
                            } & { [K_8 in Exclude<keyof I["actions"][number]["payload"]["query"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").QueryBody>]: never; }) | undefined;
                            componentCreated?: ({
                                id?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                            } & {
                                id?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                            } & { [K_9 in Exclude<keyof I["actions"][number]["payload"]["componentCreated"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ComponentCreatedBody>]: never; }) | undefined;
                            componentDisposed?: ({
                                id?: string | undefined;
                            } & {
                                id?: string | undefined;
                            } & { [K_10 in Exclude<keyof I["actions"][number]["payload"]["componentDisposed"], "id">]: never; }) | undefined;
                            componentUpdated?: ({
                                id?: string | undefined;
                                json?: string | undefined;
                            } & {
                                id?: string | undefined;
                                json?: string | undefined;
                            } & { [K_11 in Exclude<keyof I["actions"][number]["payload"]["componentUpdated"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ComponentUpdatedBody>]: never; }) | undefined;
                            initMessagesFinished?: ({} & {} & { [K_12 in Exclude<keyof I["actions"][number]["payload"]["initMessagesFinished"], never>]: never; }) | undefined;
                        } & { [K_13 in Exclude<keyof I["actions"][number]["payload"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").Payload>]: never; }) | undefined;
                    } & { [K_14 in Exclude<keyof I["actions"][number], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EntityAction>]: never; })[] & { [K_15 in Exclude<keyof I["actions"], keyof {
                        type?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EAType | undefined;
                        tag?: string | undefined;
                        payload?: {
                            openExternalUrl?: {
                                url?: string | undefined;
                            } | undefined;
                            openNftDialog?: {
                                assetContractAddress?: string | undefined;
                                tokenId?: string | undefined;
                                comment?: string | undefined;
                            } | undefined;
                            createEntity?: {
                                id?: string | undefined;
                            } | undefined;
                            removeEntity?: {
                                id?: string | undefined;
                            } | undefined;
                            updateEntityComponent?: {
                                entityId?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                                json?: string | undefined;
                            } | undefined;
                            attachEntityComponent?: {
                                entityId?: string | undefined;
                                name?: string | undefined;
                                id?: string | undefined;
                            } | undefined;
                            componentRemoved?: {
                                entityId?: string | undefined;
                                name?: string | undefined;
                            } | undefined;
                            setEntityParent?: {
                                entityId?: string | undefined;
                                parentId?: string | undefined;
                            } | undefined;
                            query?: {
                                queryId?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").QueryType | undefined;
                                payload?: string | undefined;
                            } | undefined;
                            componentCreated?: {
                                id?: string | undefined;
                                classId?: number | undefined;
                                name?: string | undefined;
                            } | undefined;
                            componentDisposed?: {
                                id?: string | undefined;
                            } | undefined;
                            componentUpdated?: {
                                id?: string | undefined;
                                json?: string | undefined;
                            } | undefined;
                            initMessagesFinished?: {} | undefined;
                        } | undefined;
                    }[]>]: never; }) | undefined;
                } & { [K_16 in Exclude<keyof I, "actions">]: never; }>(object: I): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ManyEntityAction;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SendBatchResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SendBatchResponse;
                fromJSON(object: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SendBatchResponse;
                toJSON(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SendBatchResponse): unknown;
                fromPartial<I_1 extends {
                    events?: {
                        type?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EventDataType | undefined;
                        generic?: {
                            eventId?: string | undefined;
                            eventData?: string | undefined;
                        } | undefined;
                        positionChanged?: {
                            position?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            cameraPosition?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            playerHeight?: number | undefined;
                        } | undefined;
                        rotationChanged?: {
                            rotation?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            quaternion?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                                w?: number | undefined;
                            } | undefined;
                        } | undefined;
                    }[] | undefined;
                } & {
                    events?: ({
                        type?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EventDataType | undefined;
                        generic?: {
                            eventId?: string | undefined;
                            eventData?: string | undefined;
                        } | undefined;
                        positionChanged?: {
                            position?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            cameraPosition?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            playerHeight?: number | undefined;
                        } | undefined;
                        rotationChanged?: {
                            rotation?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            quaternion?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                                w?: number | undefined;
                            } | undefined;
                        } | undefined;
                    }[] & ({
                        type?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EventDataType | undefined;
                        generic?: {
                            eventId?: string | undefined;
                            eventData?: string | undefined;
                        } | undefined;
                        positionChanged?: {
                            position?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            cameraPosition?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            playerHeight?: number | undefined;
                        } | undefined;
                        rotationChanged?: {
                            rotation?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            quaternion?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                                w?: number | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        type?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EventDataType | undefined;
                        generic?: ({
                            eventId?: string | undefined;
                            eventData?: string | undefined;
                        } & {
                            eventId?: string | undefined;
                            eventData?: string | undefined;
                        } & { [K_17 in Exclude<keyof I_1["events"][number]["generic"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").GenericPayload>]: never; }) | undefined;
                        positionChanged?: ({
                            position?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            cameraPosition?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            playerHeight?: number | undefined;
                        } & {
                            position?: ({
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } & {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } & { [K_18 in Exclude<keyof I_1["events"][number]["positionChanged"]["position"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ReadOnlyVector3>]: never; }) | undefined;
                            cameraPosition?: ({
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } & {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } & { [K_19 in Exclude<keyof I_1["events"][number]["positionChanged"]["cameraPosition"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ReadOnlyVector3>]: never; }) | undefined;
                            playerHeight?: number | undefined;
                        } & { [K_20 in Exclude<keyof I_1["events"][number]["positionChanged"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").PositionChangedPayload>]: never; }) | undefined;
                        rotationChanged?: ({
                            rotation?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            quaternion?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                                w?: number | undefined;
                            } | undefined;
                        } & {
                            rotation?: ({
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } & {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } & { [K_21 in Exclude<keyof I_1["events"][number]["rotationChanged"]["rotation"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ReadOnlyVector3>]: never; }) | undefined;
                            quaternion?: ({
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                                w?: number | undefined;
                            } & {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                                w?: number | undefined;
                            } & { [K_22 in Exclude<keyof I_1["events"][number]["rotationChanged"]["quaternion"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").ReadOnlyQuaternion>]: never; }) | undefined;
                        } & { [K_23 in Exclude<keyof I_1["events"][number]["rotationChanged"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").RotationChangedPayload>]: never; }) | undefined;
                    } & { [K_24 in Exclude<keyof I_1["events"][number], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EventData>]: never; })[] & { [K_25 in Exclude<keyof I_1["events"], keyof {
                        type?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").EventDataType | undefined;
                        generic?: {
                            eventId?: string | undefined;
                            eventData?: string | undefined;
                        } | undefined;
                        positionChanged?: {
                            position?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            cameraPosition?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            playerHeight?: number | undefined;
                        } | undefined;
                        rotationChanged?: {
                            rotation?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                            } | undefined;
                            quaternion?: {
                                x?: number | undefined;
                                y?: number | undefined;
                                z?: number | undefined;
                                w?: number | undefined;
                            } | undefined;
                        } | undefined;
                    }[]>]: never; }) | undefined;
                } & { [K_26 in Exclude<keyof I_1, "events">]: never; }>(object: I_1): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SendBatchResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly subscribe: {
            readonly name: "Subscribe";
            readonly requestType: {
                encode(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SubscribeRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SubscribeRequest;
                fromJSON(object: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SubscribeRequest;
                toJSON(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SubscribeRequest): unknown;
                fromPartial<I_2 extends {
                    eventId?: string | undefined;
                } & {
                    eventId?: string | undefined;
                } & { [K_27 in Exclude<keyof I_2, "eventId">]: never; }>(object: I_2): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SubscribeRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(_: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SubscribeResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SubscribeResponse;
                fromJSON(_: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SubscribeResponse;
                toJSON(_: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SubscribeResponse): unknown;
                fromPartial<I_3 extends {} & {} & { [K_28 in Exclude<keyof I_3, never>]: never; }>(_: I_3): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").SubscribeResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly unsubscribe: {
            readonly name: "Unsubscribe";
            readonly requestType: {
                encode(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UnsubscribeRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UnsubscribeRequest;
                fromJSON(object: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UnsubscribeRequest;
                toJSON(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UnsubscribeRequest): unknown;
                fromPartial<I_4 extends {
                    eventId?: string | undefined;
                } & {
                    eventId?: string | undefined;
                } & { [K_29 in Exclude<keyof I_4, "eventId">]: never; }>(object: I_4): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UnsubscribeRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(_: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UnsubscribeResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UnsubscribeResponse;
                fromJSON(_: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UnsubscribeResponse;
                toJSON(_: import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UnsubscribeResponse): unknown;
                fromPartial<I_5 extends {} & {} & { [K_30 in Exclude<keyof I_5, never>]: never; }>(_: I_5): import("@dcl/protocol/out-ts/decentraland/kernel/apis/engine_api.gen").UnsubscribeResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
    };
}>, Context>;
