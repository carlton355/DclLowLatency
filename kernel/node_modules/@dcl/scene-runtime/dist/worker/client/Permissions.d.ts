import { RpcClientPort } from '@dcl/rpc/dist/types';
export declare function createPermissionsServiceClient<Context extends {}>(clientPort: RpcClientPort): import("@dcl/rpc/dist/codegen-types").RawClient<import("@dcl/rpc/dist/codegen-types").FromTsProtoServiceDefinition<{
    readonly name: "PermissionsService";
    readonly fullName: "decentraland.kernel.apis.PermissionsService";
    readonly methods: {
        readonly hasPermission: {
            readonly name: "HasPermission";
            readonly requestType: {
                encode(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasPermissionRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasPermissionRequest;
                fromJSON(object: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasPermissionRequest;
                toJSON(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasPermissionRequest): unknown;
                fromPartial<I extends {
                    permission?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionItem | undefined;
                } & {
                    permission?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionItem | undefined;
                } & { [K in Exclude<keyof I, "permission">]: never; }>(object: I): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasPermissionRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionResponse;
                fromJSON(object: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionResponse;
                toJSON(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionResponse): unknown;
                fromPartial<I_1 extends {
                    hasPermission?: boolean | undefined;
                } & {
                    hasPermission?: boolean | undefined;
                } & { [K_1 in Exclude<keyof I_1, "hasPermission">]: never; }>(object: I_1): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly hasManyPermissions: {
            readonly name: "HasManyPermissions";
            readonly requestType: {
                encode(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasManyPermissionRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasManyPermissionRequest;
                fromJSON(object: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasManyPermissionRequest;
                toJSON(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasManyPermissionRequest): unknown;
                fromPartial<I_2 extends {
                    permissions?: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionItem[] | undefined;
                } & {
                    permissions?: (import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionItem[] & import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionItem[] & { [K_2 in Exclude<keyof I_2["permissions"], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").PermissionItem[]>]: never; }) | undefined;
                } & { [K_3 in Exclude<keyof I_2, "permissions">]: never; }>(object: I_2): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasManyPermissionRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasManyPermissionResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasManyPermissionResponse;
                fromJSON(object: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasManyPermissionResponse;
                toJSON(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasManyPermissionResponse): unknown;
                fromPartial<I_3 extends {
                    hasManyPermission?: boolean[] | undefined;
                } & {
                    hasManyPermission?: (boolean[] & boolean[] & { [K_4 in Exclude<keyof I_3["hasManyPermission"], keyof boolean[]>]: never; }) | undefined;
                } & { [K_5 in Exclude<keyof I_3, "hasManyPermission">]: never; }>(object: I_3): import("@dcl/protocol/out-ts/decentraland/kernel/apis/permissions.gen").HasManyPermissionResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
    };
}>, Context>;
