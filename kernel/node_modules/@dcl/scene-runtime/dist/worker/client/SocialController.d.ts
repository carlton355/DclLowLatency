import { RpcClientPort } from '@dcl/rpc/dist/types';
export declare function createSocialControllerServiceClient<Context extends {}>(clientPort: RpcClientPort): import("@dcl/rpc/dist/codegen-types").RawClient<import("@dcl/rpc/dist/codegen-types").FromTsProtoServiceDefinition<{
    readonly name: "SocialControllerService";
    readonly fullName: "decentraland.kernel.apis.SocialControllerService";
    readonly methods: {
        readonly pullAvatarEvents: {
            readonly name: "PullAvatarEvents";
            readonly requestType: {
                encode(_: import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").InitRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").InitRequest;
                fromJSON(_: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").InitRequest;
                toJSON(_: import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").InitRequest): unknown;
                fromPartial<I extends {} & {} & { [K in Exclude<keyof I, never>]: never; }>(_: I): import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").InitRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").GetAvatarEventsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number | undefined): import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").GetAvatarEventsResponse;
                fromJSON(object: any): import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").GetAvatarEventsResponse;
                toJSON(message: import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").GetAvatarEventsResponse): unknown;
                fromPartial<I_1 extends {
                    events?: {
                        event?: string | undefined;
                        payload?: string | undefined;
                    }[] | undefined;
                } & {
                    events?: ({
                        event?: string | undefined;
                        payload?: string | undefined;
                    }[] & ({
                        event?: string | undefined;
                        payload?: string | undefined;
                    } & {
                        event?: string | undefined;
                        payload?: string | undefined;
                    } & { [K_1 in Exclude<keyof I_1["events"][number], keyof import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").SocialEvent>]: never; })[] & { [K_2 in Exclude<keyof I_1["events"], keyof {
                        event?: string | undefined;
                        payload?: string | undefined;
                    }[]>]: never; }) | undefined;
                } & { [K_3 in Exclude<keyof I_1, "events">]: never; }>(object: I_1): import("@dcl/protocol/out-ts/decentraland/kernel/apis/social_controller.gen").GetAvatarEventsResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
    };
}>, Context>;
