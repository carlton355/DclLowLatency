"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayersServiceClient = void 0;
const codegen = __importStar(require("@dcl/rpc/dist/codegen"));
const players_gen_1 = require("@dcl/protocol/out-ts/decentraland/kernel/apis/players.gen");
var PlayersServiceClient;
(function (PlayersServiceClient) {
    function create(clientPort) {
        return codegen.loadService(clientPort, players_gen_1.PlayersServiceDefinition);
    }
    PlayersServiceClient.create = create;
    function createLegacy(clientPort) {
        const originalService = codegen.loadService(clientPort, players_gen_1.PlayersServiceDefinition);
        return {
            ...originalService,
            /**
             * Return the players's data
             */
            async getPlayerData(opt) {
                const originalResponse = await originalService.getPlayerData({ userId: opt.userId });
                if (!originalResponse.data) {
                    return null;
                }
                return {
                    ...originalResponse.data,
                    avatar: {
                        ...originalResponse.data.avatar,
                        snapshots: originalResponse.data.avatar.snapshots
                    },
                    publicKey: originalResponse.data.publicKey || null
                };
            },
            /**
             * Return array of connected players
             */
            async getConnectedPlayers() {
                return (await originalService.getConnectedPlayers({})).players;
            },
            /**
             * Return array of players inside the scene
             */
            async getPlayersInScene() {
                return (await originalService.getPlayersInScene({})).players;
            }
        };
    }
    PlayersServiceClient.createLegacy = createLegacy;
})(PlayersServiceClient = exports.PlayersServiceClient || (exports.PlayersServiceClient = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGxheWVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy93b3JrZXIvY2xpZW50L1BsYXllcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrREFBZ0Q7QUFFaEQsMkZBQW9HO0FBR3BHLElBQWlCLG9CQUFvQixDQTJDcEM7QUEzQ0QsV0FBaUIsb0JBQW9CO0lBQ25DLFNBQWdCLE1BQU0sQ0FBcUIsVUFBeUI7UUFDbEUsT0FBTyxPQUFPLENBQUMsV0FBVyxDQUFvQyxVQUFVLEVBQUUsc0NBQXdCLENBQUMsQ0FBQTtJQUNyRyxDQUFDO0lBRmUsMkJBQU0sU0FFckIsQ0FBQTtJQUVELFNBQWdCLFlBQVksQ0FBcUIsVUFBeUI7UUFDeEUsTUFBTSxlQUFlLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBb0MsVUFBVSxFQUFFLHNDQUF3QixDQUFDLENBQUE7UUFFcEgsT0FBTztZQUNMLEdBQUcsZUFBZTtZQUNsQjs7ZUFFRztZQUNILEtBQUssQ0FBQyxhQUFhLENBQUMsR0FBdUI7Z0JBQ3pDLE1BQU0sZ0JBQWdCLEdBQUcsTUFBTSxlQUFlLENBQUMsYUFBYSxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFBO2dCQUNwRixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFO29CQUMxQixPQUFPLElBQUksQ0FBQTtpQkFDWjtnQkFDRCxPQUFPO29CQUNMLEdBQUcsZ0JBQWdCLENBQUMsSUFBSTtvQkFDeEIsTUFBTSxFQUFFO3dCQUNOLEdBQUcsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE1BQU87d0JBQ2hDLFNBQVMsRUFBRSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsTUFBTyxDQUFDLFNBQVU7cUJBQ3BEO29CQUNELFNBQVMsRUFBRSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUk7aUJBQ25ELENBQUE7WUFDSCxDQUFDO1lBRUQ7O2VBRUc7WUFDSCxLQUFLLENBQUMsbUJBQW1CO2dCQUN2QixPQUFPLENBQUMsTUFBTSxlQUFlLENBQUMsbUJBQW1CLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUE7WUFDaEUsQ0FBQztZQUVEOztlQUVHO1lBQ0gsS0FBSyxDQUFDLGlCQUFpQjtnQkFDckIsT0FBTyxDQUFDLE1BQU0sZUFBZSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFBO1lBQzlELENBQUM7U0FDRixDQUFBO0lBQ0gsQ0FBQztJQXJDZSxpQ0FBWSxlQXFDM0IsQ0FBQTtBQUNILENBQUMsRUEzQ2dCLG9CQUFvQixHQUFwQiw0QkFBb0IsS0FBcEIsNEJBQW9CLFFBMkNwQyJ9