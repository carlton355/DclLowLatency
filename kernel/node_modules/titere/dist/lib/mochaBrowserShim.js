"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * This function runs inside the browser.
 * @param reporter
 */
function initMocha(reporter) {
    console.log = (console => {
        const log = console.log.bind(console);
        return (...args) => (args.length ? log(...args) : log(''));
    })(console);
    function shimMochaInstance(m) {
        m.reporter(reporter || 'spec');
        const run = m.run.bind(m);
        m.run = () => {
            const all = [];
            const pending = [];
            const failures = [];
            const passes = [];
            function error(err) {
                if (!err)
                    return {};
                let res = {};
                Object.getOwnPropertyNames(err).forEach(key => (res[key] = err[key]));
                return res;
            }
            function clean(test) {
                return {
                    title: test.title,
                    fullTitle: test.fullTitle(),
                    duration: test.duration,
                    err: test.err && error(test.err)
                };
            }
            function result(stats) {
                return {
                    result: {
                        stats: {
                            tests: all.length,
                            passes: passes.length,
                            pending: pending.length,
                            failures: failures.length,
                            start: stats && stats.start && stats.start.toISOString(),
                            end: stats && stats.end && stats.end.toISOString(),
                            duration: stats && stats.duration
                        },
                        tests: all.map(clean),
                        pending: pending.map(clean),
                        failures: failures.map(clean),
                        passes: passes.map(clean),
                        passed: failures.length === 0
                    },
                    coverage: window['__coverage__']
                };
            }
            function setResult() {
                !window['__mochaResult__'] && (window['__mochaResult__'] = result(this.stats));
            }
            const runner = run(() => setTimeout(() => setResult.call(runner), 0))
                .on('pass', (test) => {
                passes.push(test);
                all.push(test);
            })
                .on('fail', (test) => {
                failures.push(test);
                all.push(test);
            })
                .on('pending', (test) => {
                pending.push(test);
                all.push(test);
            })
                .on('end', setResult);
            return runner;
        };
    }
    function shimMochaProcess(M) {
        // Mocha needs a process.stdout.write in order to change the cursor position.
        !M.process && (M.process = {});
        !M.process.stdout && (M.process.stdout = {});
        // tslint:disable-next-line:no-console
        M.process.stdout.write = (data) => console.log('stdout:', data);
        M.reporters.Base.useColors = true;
        M.reporters.none = function None(runner) {
            M.reporters.Base.call(this, runner);
        };
    }
    Object.defineProperty(window, 'mocha', {
        get: function () {
            return undefined;
        },
        set: function (m) {
            shimMochaInstance(m);
            delete window['mocha'];
            window['mocha'] = m;
        },
        configurable: true
    });
    Object.defineProperty(window, 'Mocha', {
        get: function () {
            return undefined;
        },
        set: function (m) {
            shimMochaProcess(m);
            delete window['Mocha'];
            window['Mocha'] = m;
        },
        configurable: true
    });
}
exports.initMocha = initMocha;
//# sourceMappingURL=mochaBrowserShim.js.map